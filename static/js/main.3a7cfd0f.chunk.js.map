{"version":3,"sources":["variables/variables.tsx","store/store.tsx","utils/converter.tsx","components/Lists/List.tsx","components/Lists/Lists.tsx","image/logo.png","components/Comment/comment.tsx","components/Post/Post.tsx","components/User/User.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["newsURL","itemUrl","userUrl","StoreContext","createContext","idPost","url","setUrl","undefined","loading","setLoading","checked","setChecked","StoreComponent","children","useState","setIdPost","fetchIdPost","axios","get","then","response","data","useEffect","timerId","setInterval","clearInterval","Provider","value","converterDate","times","Date","toLocaleDateString","hour","minute","List","i","title","by","score","time","id","TableRow","sx","border","TableCell","component","scope","style","color","to","align","Lists","useContext","posts","setPosts","click","setClick","min","max","map","m","length","pos","fetchPosts","console","log","className","Switch","onChange","inputProps","Button","variant","onClick","window","location","reload","TableContainer","Paper","Table","minWidth","size","TableHead","TableBody","l","descendants","type","disabled","Comment","text","kids","kid","setKid","show","setShow","c","fetchComments","margin","Card","dangerouslySetInnerHTML","__html","e","preventDefault","prevShow","showComment","k","parent","Post","params","useParams","navigate","useNavigate","postItem","setPostItem","comments","setComments","fetchPost","CardContent","Stack","direction","spacing","Avatar","alt","src","logo","width","height","Typography","CardActions","Link","href","User","user","setUser","fetchUser","created","karma","about","submitted","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"qZAAaA,EAAQ,wDAGRC,EAAQ,8CACRC,EAAQ,8C,OCURC,EAAaC,wBAA6B,CACnDC,OAAQ,GACRC,IAAK,GACLC,YAAQC,EACRC,SAAS,EACTC,gBAAYF,EACZG,SAAQ,EACRC,gBAAWJ,IAkCAK,EA/BM,SAAD,GAAqC,IAAlCC,EAAQ,EAARA,SACnB,EAA4BC,mBAAgB,IAAG,mBAAxCV,EAAM,KAAEW,EAAS,KACxB,EAAmBD,mBAAiBf,GAAQ,mBAArCM,EAAG,KAACC,EAAM,KACjB,EAA8BQ,oBAAS,GAAM,mBAAtCN,EAAO,KAAEC,EAAU,KAC1B,EAA8BK,oBAAS,GAAK,mBAArCJ,EAAO,KAAEC,EAAU,KAAmB,SAE9BK,EAAY,GAAD,4CAIzB,OAJyB,kCAA1B,WAA2BX,GAAa,OAAF,oFAC5BY,IAAMC,IAAIb,GAAKc,MAAK,SAACC,GACvBL,EAAUK,EAASC,KACvB,IAAG,KAAD,sCACL,wBAaD,OAXAC,qBAAU,WACNb,GAAW,GACXO,EAAYX,GACZ,IAAMkB,EAASC,aAAY,WACvBR,EAAYX,EAChB,GAAG,KACH,OAAO,WACHoB,cAAcF,EAClB,CACJ,GAAG,CAAClB,IAECD,EAGD,cAACF,EAAawB,SAAQ,CAACC,MAAO,CAACvB,SAAOC,MAAIC,SAAOE,UAAQC,aAAWC,UAAQC,cAAY,SACnFE,IAJW,IAOxB,E,MCtDO,SAASe,EAAeC,GAC7B,OAAa,OAAVA,QAA4BtB,IAAVsB,EAA4B,GAExC,IAAIC,KAAa,IAARD,GACbE,mBAAmB,QAAS,CAC3BC,KAAM,UACNC,OAAQ,WAIhB,C,YCiBeC,EAtBJ,SAAD,EAA0CC,GAAY,IAAnDC,EAAK,EAALA,MAAMC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAMC,EAAI,EAAJA,KAAKC,EAAE,EAAFA,GAC9B,OACQ,eAACC,EAAA,EAAQ,CAELC,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,IAAM,UAE1D,cAACC,EAAA,EAAS,CAACC,UAAU,KAAKC,MAAM,MAAK,SACjC,cAAC,IAAO,CAACC,MAAO,CAACC,MAAO,WAAYC,GAAE,gBAAWT,GAAK,SACjDJ,MAGT,cAACQ,EAAA,EAAS,CAACM,MAAM,QAAO,SACpB,cAAC,IAAO,CAACH,MAAO,CAACC,MAAO,WAAYC,GAAE,kBAAaZ,GAAK,SACnDA,MAIT,cAACO,EAAA,EAAS,CAACM,MAAM,QAAO,SAAEZ,IAC1B,cAACM,EAAA,EAAS,CAACM,MAAM,QAAO,SAAEtB,EAAcW,OAfnCC,EAkBrB,ECiFeW,EAlGH,WACR,MAA4DC,qBAAWlD,GAAhEE,EAAM,EAANA,OAAOE,EAAM,EAANA,OAAOE,EAAO,EAAPA,QAAQC,EAAU,EAAVA,WAAWC,EAAO,EAAPA,QAAQC,EAAU,EAAVA,WAChD,EAAwBG,mBAA0B,IAAG,mBAA9CuC,EAAK,KAAEC,EAAQ,KACtB,EAAuBxC,mBAAiB,GAAE,mBAAnCyC,EAAK,KAACC,EAAQ,KAcI,aAaxB,OAbwB,kCAAzB,WAA0BD,GAAc,IAAF,+EAGrB,OADPE,GADAC,EAAI,GAAGH,GACC,GACdD,EAAS,IAAI,SACPlD,EAAOuD,IAAG,iDAAC,WAAOC,EAAUC,GAAM,gFACjCA,EAAOJ,GAAOI,EAAOH,GAAG,gCACjBzC,IAAMC,IAAI,GAAD,OAAIlB,GAAO,OAAG4D,EAAC,UAC7BzC,KAAI,iDAAC,WAAOC,GAAQ,2FACXkC,GAAS,SAAAQ,GAAG,4BAAMA,GAAG,CAAC1C,EAASC,MAAI,IAAE,2CAE9C,mDAHI,IAGH,2CAET,qDARe,IAQd,2CACL,wBAaD,OAPAC,qBAAW,YArBT,SAEwB,GAAD,wBAoBrByC,CAAWR,GACX9C,GAAW,GACXuD,QAAQC,IAAIZ,EAEhB,GAAG,CAACjD,EAAOmD,IAGP,0BAASW,UAAU,QAAO,UACtB,sBAAKA,UAAU,aAAY,UAEvB,sBAAKA,UAAU,SAAQ,UACnB,8BAAK,gBACL,cAACC,EAAA,EAAM,CACHzD,QAASA,EACT0D,SA9CC,WACjBzD,GAAYD,GACRA,GAKAD,GAAW,GACXH,EJrBS,4DIgBTG,GAAW,GACXH,EAAOP,GAMf,EAqCoBsE,WAAY,CAAE,aAAc,gBAEhC,8BAAK,iBAET,4BAAG,gBACH,cAACC,EAAA,EAAM,CAACC,QAAQ,WAAWC,QAAS,WAxB5CC,OAAOC,SAASC,QAwB8C,EAAE,SAAC,oBAG7D,cAACC,EAAA,EAAc,CAACV,UAAU,OAAOrB,UAAWgC,IAAM,SAC9C,eAACC,EAAA,EAAK,CAACpC,GAAI,CAAEqC,SAAU,KAAOC,KAAK,QAAQ,aAAW,gBAAe,UACjE,cAACC,EAAA,EAAS,UACN,eAACxC,EAAA,EAAQ,WACL,cAACG,EAAA,EAAS,CAACsB,UAAU,OAAM,SAAC,eAC5B,cAACtB,EAAA,EAAS,CAACsB,UAAU,OAAOhB,MAAM,QAAO,SAAC,aAC1C,cAACN,EAAA,EAAS,CAACsB,UAAU,OAAOhB,MAAM,QAAO,SAAC,WAC1C,cAACN,EAAA,EAAS,CAACsB,UAAU,OAAOhB,MAAM,QAAO,SAAC,cAIlD,cAACgC,EAAA,EAAS,UACT1E,EAAU,8BAAK,eAAoB6C,EAAMM,KAAI,SAACwB,EAAEhD,GAAC,OAC9C,cAAC,EAAI,CACDE,GAAI8C,EAAE9C,GACN+C,YAAaD,EAAEC,YACf5C,GAAI2C,EAAE3C,GACNF,MAAO6C,EAAE7C,MACTC,KAAM4C,EAAE5C,KACR8C,KAAMF,EAAEE,KACRhF,IAAK8E,EAAE9E,IAEP+B,MAAO+C,EAAE/C,OADJ+C,EAAE3C,GAET,WAOd,sBAAK0B,UAAU,SAAQ,UACV,IAARX,EAAY,cAACe,EAAA,EAAM,CAACJ,UAAU,eAAeoB,UAAQ,EAACf,QAAQ,WAAWC,QAAS,WAAKhB,EAASD,EAAM,EAAE,EAAE,SAAC,iBAAwB,cAACe,EAAA,EAAM,CAACJ,UAAU,eAAeK,QAAQ,WAAWC,QAAS,WAAKhB,EAASD,EAAM,EAAE,EAAE,SAAC,kBAC1N,8BAAK,mBACJF,EAAMQ,OAAO,GAAK,cAACS,EAAA,EAAM,CAACJ,UAAU,eAAeoB,UAAQ,EAACf,QAAQ,WAAWC,QAAS,WAAKhB,EAASD,EAAM,EAAE,EAAE,SAAC,cAAqB,cAACe,EAAA,EAAM,CAACJ,UAAU,eAAeK,QAAQ,WAAWC,QAAS,WAAKhB,EAASD,EAAM,EAAE,EAAE,SAAC,mBAI7O,E,+DC1Ge,G,MAAA,IAA0B,kCCuF1BgC,G,MA7ED,SAARA,EAAO,GAAkC,IAA/BC,EAAI,EAAJA,KAAKnD,EAAE,EAAFA,GAAGE,EAAI,EAAJA,KAAKkD,EAAI,EAAJA,KACzB,EAAmB3E,mBAAqB,IAAG,mBAApC4E,EAAG,KAACC,EAAM,KACjB,EAA2BvC,qBAAWlD,GAA/BM,EAAO,EAAPA,QAAQC,EAAU,EAAVA,WACf,EAAqBK,oBAAS,GAAM,mBAA7B8E,EAAI,KAACC,EAAO,KAES,aAS3B,OAT2B,kCAA5B,wFACIF,EAAO,IAEH,OAAJF,QAAI,IAAJA,KAAM9B,KAAI,SAACmC,EAAE3D,GAAC,OACVlB,IAAMC,IAAI,GAAD,OAAIlB,GAAO,OAAG8F,EAAC,UACvB3E,KAAI,iDAAC,WAAOC,GAAQ,2FACXuE,GAAO,SAAA7B,GAAG,4BAAMA,GAAG,CAAC1C,EAASC,MAAO,SAAD,sCAC5C,mDAFI,GAEH,IACJ,2CACL,wBAaD,OANAC,qBAAU,WACNb,GAAW,GAnBsB,WAET,wBAkBxBsF,GACAtF,GAAW,EACf,GAAE,IAGE,8BACKD,EACG,qBAAKuC,MAAO,CAACiD,OAAO,kBAAkB,SAClC,cAACC,EAAA,EAAI,CAAC/B,UAAU,UAAS,SACrB,qBAAKA,UAAU,cAAa,SAAC,gBAIrC,gCACI,cAAC+B,EAAA,EAAI,CAAC/B,UAAU,WAAWnB,MAAO,CAACiD,OAAO,iBAAiB,SACvD,sBAAK9B,UAAU,UAAS,UACpB,qBAAKA,UAAU,QAAQgC,wBAAyB,CAACC,OAAOX,KACxD,sBAAKtB,UAAU,OAAM,UACjB,mBAAGA,UAAU,YAAW,SACpB,cAAC,IAAO,CAACnB,MAAO,CAACC,MAAO,WAAYC,GAAE,kBAAaZ,GAAK,SACnDA,MAGT,mBAAG6B,UAAU,QAAO,SAAEtC,EAAcW,aAMxCmD,EAAI7B,OAAO,GACP,cAACS,EAAA,EAAM,CAACU,KAAK,SAASR,QAAS,SAAC4B,GAAC,OArC3C,SAACA,GACfA,EAAEC,iBACFR,GAAQ,SAAAS,GAAQ,OAAGA,CAAQ,GAC/B,CAkCgEC,CAAYH,EAAE,EAAC,SAAC,oBAK/DR,IACIpF,EACG,qBAAKuC,MAAO,CAACiD,OAAO,kBAAkB,SAClC,cAACC,EAAA,EAAI,CAAC/B,UAAU,UAAS,SACrB,qBAAKA,UAAU,cAAa,SAAC,gBAGjC,OAAHwB,QAAG,IAAHA,OAAG,EAAHA,EAAK/B,KAAI,SAAC6C,EAAErE,GAAC,OACd,qBAAKY,MAAO,CAACiD,OAAO,kBAAkB,SAClC,cAACT,EAAO,CAAClD,GAAImE,EAAEnE,GAAIG,GAAIgE,EAAEhE,GAAIiE,OAAQD,EAAEC,OAAQjB,KAAMgB,EAAEhB,KAAMjD,KAAMiE,EAAEjE,KAAM8C,KAAMmB,EAAEnB,KAAMI,KAAMe,EAAEf,QAC/F,SAQlC,GCuCeiB,EAhHJ,WACP,MAA2BtD,qBAAWlD,GAA/BM,EAAO,EAAPA,QAAQC,EAAU,EAAVA,WACXkG,EAASC,cACTC,EAAWC,cACf,EAA8BhG,qBAAyB,mBAAhDiG,EAAQ,KAAEC,EAAW,KAC5B,EAA6BlG,mBAAqB,IAAG,mBAA9CmG,EAAQ,KAACC,EAAW,KAC3B,EAAqBpG,oBAAS,GAAM,mBAA7B8E,EAAI,KAACC,EAAO,KAEK,aAMvB,OANuB,kCAAxB,wGACU5E,IAAMC,IAAI,GAAD,OAAIlB,GAAO,OAAG2G,EAAOnE,GAAE,UACrCrB,KAAI,iDAAC,WAAOC,GAAQ,2FACX4F,EAAY5F,EAASC,MAAM,KAAD,EAChC2C,QAAQC,IAAI7C,EAASC,MAAK,2CAC7B,mDAHI,IAGH,2CACL,wBAU2B,aAQ3B,OAR2B,kCAA5B,8FACI6F,EAAY,IACJ,OAARH,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUtB,YAAI,OAAd,EAAgB9B,KAAI,SAACmC,EAAE3D,GAAC,OACpBlB,IAAMC,IAAI,GAAD,OAAIlB,GAAO,OAAG8F,EAAC,UACvB3E,KAAI,iDAAC,WAAOC,GAAQ,2FACX8F,GAAY,SAAApD,GAAG,4BAAMA,GAAG,CAAC1C,EAASC,MAAO,SAAD,sCACjD,mDAFI,GAEH,IACJ,2CACL,wBAmBD,OAbAC,qBAAU,WACNb,GAAW,GAjCsB,WAEb,wBAgCpB0G,GACA1G,GAAW,EACf,GAAE,CAACkG,EAAOnE,KAEVlB,qBAAU,WACNb,GAAW,GAvBd,WAE2B,wBAsBxBsF,GACAtF,GAAW,EACf,GAAE,CAACmF,IAIC,0BAAS1B,UAAU,OAAM,UACrB,sBAAKA,UAAU,aAAY,UACvB,cAACI,EAAA,EAAM,CAACC,QAAQ,WAAWL,UAAU,SAASM,QAtC3C,WACXqC,GAAU,EACd,EAoC0E,SAAC,YAC/D,4BAAG,gBACH,cAACvC,EAAA,EAAM,CAACC,QAAQ,WAAWC,QAAS,WAnC5CC,OAAOC,SAASC,QAmC8C,EAAE,SAAC,oBAG7D,eAACsB,EAAA,EAAI,CAAC/B,UAAU,OAAM,UAClB,eAACkD,EAAA,EAAW,WACR,sBAAKlD,UAAU,OAAM,UACjB,cAACmD,EAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAE,SAC9B,cAACC,EAAA,EAAM,CACHC,IAAI,cACJC,IAAKC,EACLjF,GAAI,CAAEkF,MAAO,GAAIC,OAAQ,QAIjC,sBAAK3D,UAAU,WAAU,UACrB,mBAAGA,UAAU,WAAU,SACnB,cAAC,IAAO,CAACnB,MAAO,CAACC,MAAO,WAAYC,GAAE,kBAAqB,OAAR8D,QAAQ,IAARA,OAAQ,EAARA,EAAU1E,IAAK,SACrD,OAAR0E,QAAQ,IAARA,OAAQ,EAARA,EAAU1E,OAGnB,mBAAG6B,UAAU,OAAM,SAAEtC,EAAsB,OAARmF,QAAQ,IAARA,OAAQ,EAARA,EAAUxE,cAGrD,cAACuF,EAAA,EAAU,CAACvD,QAAQ,KAAI,SACX,OAARwC,QAAQ,IAARA,OAAQ,EAARA,EAAU3E,WAInB,eAAC2F,EAAA,EAAW,WACR,cAACzD,EAAA,EAAM,CAACU,KAAK,SAAQ,SAAC,cAACgD,EAAA,EAAI,CAACC,KAAc,OAARlB,QAAQ,IAARA,OAAQ,EAARA,EAAU1G,IAAI,SAAW,OAAR0G,QAAQ,IAARA,KAAU1G,IAAM,4BAAG,QAAU,4BAAG,eACnF,eAACiE,EAAA,EAAM,CAACU,KAAK,SAASR,QAAS,WAnD3CqB,GAAQ,EAmDoD,EAAC,UAAC,aAAmB,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAU3B,qBAI9EQ,IACIpF,EACG,cAACyF,EAAA,EAAI,CAAC/B,UAAU,SAAQ,SACpB,qBAAKA,UAAU,cAAa,SAAC,iBAGxB,OAAR6C,QAAQ,IAARA,KAAUtB,KAKPwB,EAAStD,KAAI,SAACmC,EAAE3D,GAAC,OACjB,qBAAK+B,UAAU,SAAQ,SACnB,cAAC,EAAO,CAAC7B,GAAIyD,EAAEzD,GAAIG,GAAIsD,EAAEtD,GAAIiE,OAAQX,EAAEW,OAAQhB,KAAO,OAADK,QAAC,IAADA,OAAC,EAADA,EAAGL,KAAMD,KAAMM,EAAEN,KAAMjD,KAAMuD,EAAEvD,KAAM8C,KAAMS,EAAET,QAChG,IAPN,cAACY,EAAA,EAAI,CAAC/B,UAAU,YAAW,SACvB,qBAAKA,UAAU,cAAa,SAAC,+BAazD,ECtDegE,G,MA5DJ,WACP,IAAIvB,EAASC,cACTC,EAAWC,cACf,EAAsBhG,qBAAiB,mBAAhCqH,EAAI,KAAEC,EAAO,KAEI,aAMvB,OANuB,kCAAxB,wGACUnH,IAAMC,IAAI,GAAD,OAAIjB,GAAO,OAAG0G,EAAOtE,GAAE,UACrClB,KAAI,iDAAC,WAAOC,GAAQ,2FACXgH,EAAQhH,EAASC,MAAM,KAAD,EAC5B2C,QAAQC,IAAI7C,EAASC,MAAK,2CAC7B,mDAHI,IAGH,2CACL,wBAcD,OAJAC,qBAAU,YAlB8B,WAEhB,wBAiBpB+G,EACJ,GAAE,CAAC1B,EAAOtE,KAIN,0BAAS6B,UAAU,OAAM,UACrB,sBAAKA,UAAU,aAAY,UACvB,cAACI,EAAA,EAAM,CAACC,QAAQ,WAAWC,QAhBxB,WACXqC,GAAU,EACd,EAcuD,SAAC,YAC5C,4BAAG,gBACH,cAACvC,EAAA,EAAM,CAACC,QAAQ,WAAWC,QAAS,WAb5CC,OAAOC,SAASC,QAa8C,EAAE,SAAC,oBAG7D,cAACsB,EAAA,EAAI,CAAC/B,UAAU,OAAM,SAClB,eAACkD,EAAA,EAAW,WACR,sBAAKlD,UAAU,OAAM,UACjB,cAACmD,EAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAE,SAC9B,cAACC,EAAA,EAAM,CACHC,IAAI,cACJC,IAAKC,EACLjF,GAAI,CAAEkF,MAAO,GAAIC,OAAQ,QAIjC,qBAAK3D,UAAU,WAAU,SACrB,mBAAGA,UAAU,WAAU,SAAEyC,EAAOtE,UAGxC,sBAAK6B,UAAU,YAAW,UACtB,8BAAG,4CAA0CtC,EAAkB,OAAJuG,QAAI,IAAJA,OAAI,EAAJA,EAAMG,YACjE,8BAAG,qBAAuB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,SACtB,OAAJJ,QAAI,IAAJA,KAAMK,MAAqD,gCAAK,+BAA4B,mBAAGP,KAAU,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,SAAM,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,WAA3G,8BAAK,oCACrB,8BAAQ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,UAAU5E,OAAO,mCAAiC8C,EAAOtE,gBAM3F,GC7CeqG,MAhBf,WACE,OACE,qBAAKxE,UAAU,MAAK,SAChB,qBAAKA,UAAU,YAAW,SAExB,eAAC,IAAM,WACL,cAAC,IAAK,CAACyE,KAAK,IAAIC,QAAS,cAAC,EAAK,MAC/B,cAAC,IAAK,CAACD,KAAK,YAAYC,QAAS,cAAC,EAAI,MACtC,cAAC,IAAK,CAACD,KAAK,cAAcC,QAAS,cAAC,EAAI,YAMpD,ECReC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5H,MAAK,YAAkD,IAA/C6H,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,ECJaO,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH,cAAC,EAAc,UACX,cAAC,IAAM,UACL,cAAC,EAAG,SAQZZ,G","file":"static/js/main.3a7cfd0f.chunk.js","sourcesContent":["export const newsURL='https://hacker-news.firebaseio.com/v0/newstories.json';\r\nexport const bestURL='https://hacker-news.firebaseio.com/v0/beststories.json';\r\nexport const baseUrl='https://hacker-news.firebaseio.com/v0/';\r\nexport const itemUrl='https://hacker-news.firebaseio.com/v0/item/';\r\nexport const userUrl='https://hacker-news.firebaseio.com/v0/user/';\r\n","import axios from \"axios\";\r\nimport { createContext, ReactNode, SetStateAction, useEffect, useState } from \"react\";\r\nimport { newsURL } from \"../variables/variables\";\r\n\r\ninterface IStoreContext{\r\n    idPost:any[],\r\n    url:string,\r\n    setUrl:any,\r\n    loading:boolean, \r\n    setLoading:any,\r\n    checked:boolean, \r\n    setChecked:any,\r\n}\r\n\r\nexport const StoreContext=createContext<IStoreContext>({\r\n    idPost: [],\r\n    url: '',\r\n    setUrl: undefined,\r\n    loading: false,\r\n    setLoading: undefined,\r\n    checked:true, \r\n    setChecked:undefined\r\n})\r\n\r\nconst StoreComponent=({children}:{children:ReactNode})=>{\r\n    const [idPost, setIdPost] = useState<any[]>([]);\r\n    const [url,setUrl]=useState<string>(newsURL);\r\n    const [loading, setLoading] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n    \r\n    async function fetchIdPost(url: string){\r\n        await axios.get(url).then((response) => {\r\n            setIdPost(response.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchIdPost(url);\r\n        const timerId =setInterval(()=>{\r\n            fetchIdPost(url);\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(timerId);\r\n        } \r\n    }, [url]);\r\n\r\n    if (!idPost) return null;\r\n\r\n    return (\r\n        <StoreContext.Provider value={{idPost,url,setUrl,loading,setLoading,checked,setChecked}}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n  )\r\n}\r\nexport default StoreComponent;","export function converterDate (times:number | null | undefined) {\r\n  if(times === null || times === undefined) return ''\r\n  else{\r\n    return new Date(times * 1000)\r\n      .toLocaleDateString(\"ru-RU\", {\r\n        hour: 'numeric' ,\r\n        minute: 'numeric'\r\n      })\r\n  }\r\n    \r\n}","import { TableCell, TableRow } from \"@mui/material\";\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { INewsItemType } from \"../../utils/types\";\r\n\r\nconst List=({title,by, score,time,id}:INewsItemType,i:number)=>{\r\n    return(\r\n            <TableRow\r\n                key={id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n                <TableCell component=\"th\" scope=\"row\" >\r\n                    <NavLink style={{color: '#1976d2'}} to={`/post/${id}`}>\r\n                        {title}\r\n                    </NavLink>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <NavLink style={{color: '#1976d2'}} to={`/userid/${by}`}>\r\n                        {by}\r\n                    </NavLink>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"right\">{score}</TableCell>\r\n                <TableCell align=\"right\">{converterDate(time)}</TableCell>  \r\n            </TableRow> \r\n    )\r\n}\r\nexport default List;","import { Button, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { StoreContext } from \"../../store/store\";\r\nimport './lists.css';\r\nimport { bestURL, itemUrl, newsURL } from \"../../variables/variables\";\r\nimport List from \"./List\";\r\nimport { INewsItemType } from \"../../utils/types\";\r\n\r\nconst Lists=()=>{\r\n    const {idPost,setUrl,loading,setLoading,checked,setChecked}=useContext(StoreContext);\r\n    const [posts, setPosts]=useState<INewsItemType[]>([]);\r\n    const [click,setClick]=useState<number>(1);\r\n    \r\n    const handleChange = () => {\r\n        setChecked(!checked);\r\n        if(!checked){\r\n            setLoading(true);\r\n            setUrl(newsURL);\r\n        }\r\n        else{\r\n            setLoading(true);\r\n            setUrl(bestURL);\r\n        }\r\n    };\r\n    \r\n    async function fetchPosts(click:number){\r\n        const max=21*click;\r\n        const min=max-21;\r\n        setPosts([]);\r\n        await idPost.map(async (m: number,length)=>{\r\n            if(length>min && length<max){\r\n                await axios.get(`${itemUrl}${m}.json`)\r\n                .then(async (response)=>{\r\n                    await setPosts(pos=>[...pos,response.data])\r\n                    \r\n                })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        fetchPosts(click);\r\n        setLoading(false);\r\n        console.log(posts);\r\n\r\n    } ,[idPost,click])\r\n    \r\n    return(\r\n        <section className='lists'>\r\n            <div className='navigation'>\r\n\r\n                <div className='switch'>\r\n                    <div>Bests Posts</div>\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                    />\r\n                    <div>New Posts</div>\r\n                </div>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n\r\n            <TableContainer className=\"news\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow >\r\n                            <TableCell className=\"text\">Name title</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Username</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Rating</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                    <TableBody>\r\n                    {loading ? <div>Loading...</div> : (posts.map((l,i) => (\r\n                        <List \r\n                            by={l.by} \r\n                            descendants={l.descendants} \r\n                            id={l.id} \r\n                            score={l.score} \r\n                            time={l.time} \r\n                            type={l.type} \r\n                            url={l.url} \r\n                            key={l.id} \r\n                            title={l.title}\r\n                        />\r\n                    )))} \r\n                    \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <div className=\"footer\">\r\n                {click===1 ? <Button className=\"footerbutton\" disabled variant=\"outlined\" onClick={()=>{setClick(click-1)}}>previousPage</Button> : <Button className=\"footerbutton\" variant=\"outlined\" onClick={()=>{setClick(click-1)}}>previous Page</Button>}\r\n                <div>Design by Vlad</div>\r\n                {posts.length<20 ? <Button className=\"footerbutton\" disabled variant=\"outlined\" onClick={()=>{setClick(click+1)}}>next Page</Button> : <Button className=\"footerbutton\" variant=\"outlined\" onClick={()=>{setClick(click+1)}}>next Page</Button>}  \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Lists;","export default __webpack_public_path__ + \"static/media/logo.b054ef45.png\";","import { Card, Button } from \"@mui/material\";\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { IComment} from \"../../utils/types\";\r\nimport './Comment.css';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { StoreContext } from \"../../store/store\";\r\nimport { itemUrl } from \"../../variables/variables\";\r\n\r\nconst Comment=({text,by,time,kids}:IComment)=>{\r\n    const [kid,setKid]=useState<IComment[]>([]);\r\n    const {loading,setLoading}=useContext(StoreContext);\r\n    const [show,setShow]=useState(false);\r\n    \r\n    async function fetchComments(){\r\n        setKid([]);\r\n        \r\n        kids?.map((c,i)=>(\r\n            axios.get(`${itemUrl}${c}.json`)\r\n            .then(async (response)=>{\r\n                await setKid(pos=>[...pos,response.data]);\r\n            })\r\n        ))\r\n    }\r\n    \r\n    const showComment=(e:any)=>{\r\n        e.preventDefault()\r\n        setShow(prevShow=>!prevShow);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchComments();\r\n        setLoading(false);\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            {loading ? (\r\n                <div style={{margin:'20px 0 0 100px'}}>\r\n                    <Card className=\"loading\">\r\n                        <div className=\"textcomment\">Loading</div>\r\n                    </Card> \r\n                </div>\r\n            ):(\r\n                <div>\r\n                    <Card className=\"comments\" style={{margin:'20px 0 0 50px'}}>\r\n                        <div className=\"comment\">\r\n                            <div className=\"ctext\" dangerouslySetInnerHTML={{__html:text}}></div>\r\n                            <div className=\"flex\">\r\n                                <p className=\"cusername\">\r\n                                    <NavLink style={{color: '#1976d2'}} to={`/userid/${by}`}>\r\n                                        {by}\r\n                                    </NavLink>\r\n                                </p>\r\n                                <p className=\"cdate\">{converterDate(time)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n\r\n                    {\r\n                            kid.length>0 && \r\n                                <Button size=\"medium\" onClick={(e)=>showComment(e)}>\r\n                                    View the answer\r\n                                </Button>\r\n                    }\r\n\r\n                    {show && \r\n                        (loading ? (\r\n                            <div style={{margin:'20px 0 0 100px'}}>\r\n                                <Card className=\"loading\">\r\n                                    <div className=\"textcomment\">Loading</div>\r\n                                </Card> \r\n                            </div>\r\n                        ):(  kid?.map((k,i)=>(\r\n                            <div style={{margin:'20px 0 0 100px'}}>\r\n                                <Comment by={k.by} id={k.id} parent={k.parent} text={k.text} time={k.time} type={k.type} kids={k.kids}/>\r\n                            </div>\r\n                        ))))\r\n                    }\r\n                </div>\r\n            )\r\n            } \r\n        </div>  \r\n    )\r\n}\r\nexport default Comment;","import { Avatar, Button, Card, CardActions, CardContent, Link, Stack, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport {NavLink, useNavigate, useParams} from 'react-router-dom';\r\nimport { StoreContext } from \"../../store/store\";\r\nimport { IComment, INewsItemType } from \"../../utils/types\";\r\nimport './Post.css';\r\nimport logo from '../../image/logo.png'\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport Comment from '../Comment/comment'\r\nimport { itemUrl } from \"../../variables/variables\";\r\n\r\n\r\nconst Post=()=>{\r\n    const {loading,setLoading}=useContext(StoreContext);\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    const [postItem, setPostItem]=useState<INewsItemType>();\r\n    const [comments,setComments]=useState<IComment[]>([]);\r\n    const [show,setShow]=useState(false);\r\n\r\n    async function fetchPost(){\r\n        await axios.get(`${itemUrl}${params.id}.json`)\r\n        .then(async (response)=>{\r\n            await setPostItem(response.data); \r\n            console.log(response.data)\r\n        })\r\n    }\r\n    \r\n    const goBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    async function fetchComments(){\r\n        setComments([]);\r\n        postItem?.kids?.map((c,i)=>(\r\n            axios.get(`${itemUrl}${c}.json`)\r\n            .then(async (response)=>{\r\n                await setComments(pos=>[...pos,response.data]);\r\n            })\r\n        ))  \r\n    }\r\n\r\n    const showComment=()=>{\r\n        setShow(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchPost();\r\n        setLoading(false);\r\n    },[params.id]);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchComments();\r\n        setLoading(false);\r\n    },[show]);\r\n\r\n\r\n    return(\r\n        <section className='post'>\r\n            <div className='navigation'>\r\n                <Button variant=\"outlined\" className='button' onClick={goBack}>go back</Button>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n            \r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"flex\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Avatar\r\n                                alt=\"Hacker News\"\r\n                                src={logo}\r\n                                sx={{ width: 40, height: 40 }}\r\n                            />\r\n                        </Stack>\r\n                        \r\n                        <div className=\"infouser\">\r\n                            <p className=\"username\">\r\n                                <NavLink style={{color: '#1976d2'}} to={`/userid/${postItem?.by}`}>\r\n                                    {postItem?.by}\r\n                                </NavLink>\r\n                            </p>\r\n                            <p className=\"date\">{converterDate(postItem?.time)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <Typography variant=\"h5\" >\r\n                        {postItem?.title}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                    <Button size=\"medium\"><Link href={postItem?.url}>{ postItem?.url ? <p>URL</p> : <p>NO URL</p> }</Link></Button>\r\n                    <Button size=\"medium\" onClick={()=>showComment()}>Comments :{postItem?.descendants}</Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            {show && \r\n                (loading ? (\r\n                    <Card className=\"block1\">\r\n                        <div className=\"textcomment\">Loading...</div>\r\n                    </Card>\r\n                ):(\r\n                    !postItem?.kids ? (\r\n                        <Card className=\"nocomment\">\r\n                            <div className=\"textcomment\">There are no comments</div>\r\n                        </Card> \r\n                    ): (\r\n                        comments.map((c,i)=>(\r\n                        <div className=\"block1\">\r\n                            <Comment by={c.by} id={c.id} parent={c.parent} kids={c?.kids} text={c.text} time={c.time} type={c.type}/>\r\n                        </div>\r\n                    )))\r\n                )\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\nexport default Post;","import { Avatar, Button, Card,Stack,CardContent} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport logo from '../../image/logo.png'\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport { IUser } from \"../../utils/types\";\r\nimport {  userUrl } from \"../../variables/variables\";\r\nimport './User.css';\r\n\r\nconst User=()=>{\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    const [user, setUser]=useState<IUser>();\r\n\r\n    async function fetchUser(){\r\n        await axios.get(`${userUrl}${params.by}.json`)\r\n        .then(async (response)=>{\r\n            await setUser(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const goBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUser();\r\n    },[params.by]);\r\n\r\n    return(\r\n        \r\n        <section className='user'>\r\n            <div className='navigation'>\r\n                <Button variant=\"outlined\" onClick={goBack}>go back</Button>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"flex\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Avatar\r\n                                alt=\"Hacker News\"\r\n                                src={logo}\r\n                                sx={{ width: 40, height: 40 }}\r\n                            />\r\n                        </Stack>\r\n                        \r\n                        <div className=\"infouser\">\r\n                            <p className=\"username\">{params.by}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"aboutuser\">\r\n                        <p>Creation date of the user, in Unix Time: {converterDate(user?.created)}</p>\r\n                        <p>The user's karma: {user?.karma}</p>\r\n                        {!user?.about ? <div>no Self-description of the user</div> : <div>The user's self-description:<a href={user?.about}>{user?.about}</a></div>}\r\n                        <p>{user?.submitted.length} stories, polls and comments by {params.by}</p>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\nexport default User;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Lists from './components/Lists/Lists';\r\nimport Post from './components/Post/Post';\r\nimport User from './components/User/User';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <div className='container'>\r\n          \r\n          <Routes>\r\n            <Route path=\"/\" element={<Lists />} />\r\n            <Route path=\"/post/:id\" element={<Post />} />\r\n            <Route path=\"/userid/:by\" element={<User />} />\r\n          </Routes> \r\n          \r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport StoreComponent from './store/store';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <StoreComponent>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </StoreComponent>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}