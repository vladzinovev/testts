[{"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\index.tsx":"1","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\reportWebVitals.ts":"2","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\App.tsx":"3","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\store\\store.tsx":"4","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Lists\\Lists.tsx":"5","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\variables\\variables.tsx":"6","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Post\\Post.tsx":"7","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\User\\User.tsx":"8","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Lists\\List.tsx":"9","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\utils\\converter.tsx":"10","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Comment\\comment.tsx":"11"},{"size":690,"mtime":1672247717127,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1672226138269,"results":"14","hashOfConfig":"13"},{"size":638,"mtime":1672247524467,"results":"15","hashOfConfig":"13"},{"size":1489,"mtime":1672229577583,"results":"16","hashOfConfig":"13"},{"size":4265,"mtime":1672229577569,"results":"17","hashOfConfig":"13"},{"size":361,"mtime":1672229577585,"results":"18","hashOfConfig":"13"},{"size":4511,"mtime":1672229577572,"results":"19","hashOfConfig":"13"},{"size":2577,"mtime":1672231062218,"results":"20","hashOfConfig":"13"},{"size":1067,"mtime":1672229577568,"results":"21","hashOfConfig":"13"},{"size":280,"mtime":1672229577583,"results":"22","hashOfConfig":"13"},{"size":3276,"mtime":1672229577568,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10qjf0x",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\index.tsx",[],"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\reportWebVitals.ts",[],"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\App.tsx",["52"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Lists from './components/Lists/Lists';\nimport Post from './components/Post/Post';\nimport User from './components/User/User';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className='container'>\n          \n          <Routes>\n            <Route path=\"/\" element={<Lists />} />\n            <Route path=\"/post/:id\" element={<Post />} />\n            <Route path=\"/userid/:by\" element={<User />} />\n          </Routes> \n          \n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\store\\store.tsx",["53"],"import axios from \"axios\";\r\nimport { createContext, ReactNode, SetStateAction, useEffect, useState } from \"react\";\r\nimport { newsURL } from \"../variables/variables\";\r\n\r\ninterface IStoreContext{\r\n    idPost:any[],\r\n    url:string,\r\n    setUrl:any,\r\n    loading:boolean, \r\n    setLoading:any,\r\n    checked:boolean, \r\n    setChecked:any,\r\n}\r\n\r\nexport const StoreContext=createContext<IStoreContext>({\r\n    idPost: [],\r\n    url: '',\r\n    setUrl: undefined,\r\n    loading: false,\r\n    setLoading: undefined,\r\n    checked:true, \r\n    setChecked:undefined\r\n})\r\n\r\nconst StoreComponent=({children}:{children:ReactNode})=>{\r\n    const [idPost, setIdPost] = useState<any[]>([]);\r\n    const [url,setUrl]=useState<string>(newsURL);\r\n    const [loading, setLoading] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n    \r\n    async function fetchIdPost(url: string){\r\n        await axios.get(url).then((response) => {\r\n            setIdPost(response.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchIdPost(url);\r\n        const timerId =setInterval(()=>{\r\n            fetchIdPost(url);\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(timerId);\r\n        } \r\n    }, [url]);\r\n\r\n    if (!idPost) return null;\r\n\r\n    return (\r\n        <StoreContext.Provider value={{idPost,url,setUrl,loading,setLoading,checked,setChecked}}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n  )\r\n}\r\nexport default StoreComponent;","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Lists\\Lists.tsx",["54"],"import { Button, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { StoreContext } from \"../../store/store\";\r\nimport './lists.css';\r\nimport { bestURL, itemUrl, newsURL } from \"../../variables/variables\";\r\nimport List from \"./List\";\r\nimport { INewsItemType } from \"../../utils/types\";\r\n\r\nconst Lists=()=>{\r\n    const {idPost,setUrl,loading,setLoading,checked,setChecked}=useContext(StoreContext);\r\n    const [posts, setPosts]=useState<INewsItemType[]>([]);\r\n    const [click,setClick]=useState<number>(1);\r\n    \r\n    const handleChange = () => {\r\n        setChecked(!checked);\r\n        if(!checked){\r\n            setLoading(true);\r\n            setUrl(newsURL);\r\n        }\r\n        else{\r\n            setLoading(true);\r\n            setUrl(bestURL);\r\n        }\r\n    };\r\n    \r\n    async function fetchPosts(click:number){\r\n        const max=21*click;\r\n        const min=max-21;\r\n        setPosts([]);\r\n        await idPost.map(async (m: number,length)=>{\r\n            if(length>min && length<max){\r\n                await axios.get(`${itemUrl}${m}.json`)\r\n                .then(async (response)=>{\r\n                    await setPosts(pos=>[...pos,response.data])\r\n                    \r\n                })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        fetchPosts(click);\r\n        setLoading(false);\r\n        console.log(posts);\r\n\r\n    } ,[idPost,click])\r\n    \r\n    return(\r\n        <section className='lists'>\r\n            <div className='navigation'>\r\n\r\n                <div className='switch'>\r\n                    <div>Bests Posts</div>\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                    />\r\n                    <div>New Posts</div>\r\n                </div>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n\r\n            <TableContainer className=\"news\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow >\r\n                            <TableCell className=\"text\">Name title</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Username</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Rating</TableCell>\r\n                            <TableCell className=\"text\" align=\"right\">Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                    <TableBody>\r\n                    {loading ? <div>Loading...</div> : (posts.map((l,i) => (\r\n                        <List \r\n                            by={l.by} \r\n                            descendants={l.descendants} \r\n                            id={l.id} \r\n                            score={l.score} \r\n                            time={l.time} \r\n                            type={l.type} \r\n                            url={l.url} \r\n                            key={l.id} \r\n                            title={l.title}\r\n                        />\r\n                    )))} \r\n                    \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <div className=\"footer\">\r\n                {click===1 ? <Button className=\"footerbutton\" disabled variant=\"outlined\" onClick={()=>{setClick(click-1)}}>previousPage</Button> : <Button className=\"footerbutton\" variant=\"outlined\" onClick={()=>{setClick(click-1)}}>previous Page</Button>}\r\n                <div>Design by Vlad</div>\r\n                {posts.length<20 ? <Button className=\"footerbutton\" disabled variant=\"outlined\" onClick={()=>{setClick(click+1)}}>next Page</Button> : <Button className=\"footerbutton\" variant=\"outlined\" onClick={()=>{setClick(click+1)}}>next Page</Button>}  \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Lists;","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\variables\\variables.tsx",[],"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Post\\Post.tsx",["55","56"],"import { Avatar, Button, Card, CardActions, CardContent, Link, Stack, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport {NavLink, useNavigate, useParams} from 'react-router-dom';\r\nimport { StoreContext } from \"../../store/store\";\r\nimport { IComment, INewsItemType } from \"../../utils/types\";\r\nimport './Post.css';\r\nimport logo from '../../image/logo.png'\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport Comment from '../Comment/comment'\r\nimport { itemUrl } from \"../../variables/variables\";\r\n\r\n\r\nconst Post=()=>{\r\n    const {loading,setLoading}=useContext(StoreContext);\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    const [postItem, setPostItem]=useState<INewsItemType>();\r\n    const [comments,setComments]=useState<IComment[]>([]);\r\n    const [show,setShow]=useState(false);\r\n\r\n    async function fetchPost(){\r\n        await axios.get(`${itemUrl}${params.id}.json`)\r\n        .then(async (response)=>{\r\n            await setPostItem(response.data); \r\n            console.log(response.data)\r\n        })\r\n    }\r\n    \r\n    const goBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    async function fetchComments(){\r\n        setComments([]);\r\n        postItem?.kids?.map((c,i)=>(\r\n            axios.get(`${itemUrl}${c}.json`)\r\n            .then(async (response)=>{\r\n                await setComments(pos=>[...pos,response.data]);\r\n            })\r\n        ))  \r\n    }\r\n\r\n    const showComment=()=>{\r\n        setShow(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchPost();\r\n        setLoading(false);\r\n    },[params.id]);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchComments();\r\n        setLoading(false);\r\n    },[show]);\r\n\r\n\r\n    return(\r\n        <section className='post'>\r\n            <div className='navigation'>\r\n                <Button variant=\"outlined\" className='button' onClick={goBack}>go back</Button>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n            \r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"flex\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Avatar\r\n                                alt=\"Hacker News\"\r\n                                src={logo}\r\n                                sx={{ width: 40, height: 40 }}\r\n                            />\r\n                        </Stack>\r\n                        \r\n                        <div className=\"infouser\">\r\n                            <p className=\"username\">\r\n                                <NavLink style={{color: '#1976d2'}} to={`/userid/${postItem?.by}`}>\r\n                                    {postItem?.by}\r\n                                </NavLink>\r\n                            </p>\r\n                            <p className=\"date\">{converterDate(postItem?.time)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <Typography variant=\"h5\" >\r\n                        {postItem?.title}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                    <Button size=\"medium\"><Link href={postItem?.url}>{ postItem?.url ? <p>URL</p> : <p>NO URL</p> }</Link></Button>\r\n                    <Button size=\"medium\" onClick={()=>showComment()}>Comments :{postItem?.descendants}</Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            {show && \r\n                (loading ? (\r\n                    <Card className=\"block1\">\r\n                        <div className=\"textcomment\">Loading...</div>\r\n                    </Card>\r\n                ):(\r\n                    !postItem?.kids ? (\r\n                        <Card className=\"nocomment\">\r\n                            <div className=\"textcomment\">There are no comments</div>\r\n                        </Card> \r\n                    ): (\r\n                        comments.map((c,i)=>(\r\n                        <div className=\"block1\">\r\n                            <Comment by={c.by} id={c.id} parent={c.parent} kids={c?.kids} text={c.text} time={c.time} type={c.type}/>\r\n                        </div>\r\n                    )))\r\n                )\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\nexport default Post;","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\User\\User.tsx",["57"],"import { Avatar, Button, Card,Stack,CardContent} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport logo from '../../image/logo.png'\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport { IUser } from \"../../utils/types\";\r\nimport {  userUrl } from \"../../variables/variables\";\r\nimport './User.css';\r\n\r\nconst User=()=>{\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    const [user, setUser]=useState<IUser>();\r\n\r\n    async function fetchUser(){\r\n        await axios.get(`${userUrl}${params.by}.json`)\r\n        .then(async (response)=>{\r\n            await setUser(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const goBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUser();\r\n    },[params.by]);\r\n\r\n    return(\r\n        \r\n        <section className='user'>\r\n            <div className='navigation'>\r\n                <Button variant=\"outlined\" onClick={goBack}>go back</Button>\r\n                <p>Hacker News</p>\r\n                <Button variant=\"outlined\" onClick={()=>{refreshPage()}}>refresh page</Button>\r\n            </div>\r\n\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"flex\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Avatar\r\n                                alt=\"Hacker News\"\r\n                                src={logo}\r\n                                sx={{ width: 40, height: 40 }}\r\n                            />\r\n                        </Stack>\r\n                        \r\n                        <div className=\"infouser\">\r\n                            <p className=\"username\">{params.by}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"aboutuser\">\r\n                        <p>Creation date of the user, in Unix Time: {converterDate(user?.created)}</p>\r\n                        <p>The user's karma: {user?.karma}</p>\r\n                        {!user?.about ? <div>no Self-description of the user</div> : <div>The user's self-description:<a href={user?.about}>{user?.about}</a></div>}\r\n                        <p>{user?.submitted.length} stories, polls and comments by {params.by}</p>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\nexport default User;","C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Lists\\List.tsx",[],"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\utils\\converter.tsx",[],"C:\\Users\\MSI-AMG\\Desktop\\testtype\\src\\components\\Comment\\comment.tsx",["58"],"import { Card, Button } from \"@mui/material\";\r\nimport { converterDate } from \"../../utils/converter\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { IComment} from \"../../utils/types\";\r\nimport './Comment.css';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { StoreContext } from \"../../store/store\";\r\nimport { itemUrl } from \"../../variables/variables\";\r\n\r\nconst Comment=({text,by,time,kids}:IComment)=>{\r\n    const [kid,setKid]=useState<IComment[]>([]);\r\n    const {loading,setLoading}=useContext(StoreContext);\r\n    const [show,setShow]=useState(false);\r\n    \r\n    async function fetchComments(){\r\n        setKid([]);\r\n        \r\n        kids?.map((c,i)=>(\r\n            axios.get(`${itemUrl}${c}.json`)\r\n            .then(async (response)=>{\r\n                await setKid(pos=>[...pos,response.data]);\r\n            })\r\n        ))\r\n    }\r\n    \r\n    const showComment=(e:any)=>{\r\n        e.preventDefault()\r\n        setShow(prevShow=>!prevShow);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        fetchComments();\r\n        setLoading(false);\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            {loading ? (\r\n                <div style={{margin:'20px 0 0 100px'}}>\r\n                    <Card className=\"loading\">\r\n                        <div className=\"textcomment\">Loading</div>\r\n                    </Card> \r\n                </div>\r\n            ):(\r\n                <div>\r\n                    <Card className=\"comments\" style={{margin:'20px 0 0 50px'}}>\r\n                        <div className=\"comment\">\r\n                            <div className=\"ctext\" dangerouslySetInnerHTML={{__html:text}}></div>\r\n                            <div className=\"flex\">\r\n                                <p className=\"cusername\">\r\n                                    <NavLink style={{color: '#1976d2'}} to={`/userid/${by}`}>\r\n                                        {by}\r\n                                    </NavLink>\r\n                                </p>\r\n                                <p className=\"cdate\">{converterDate(time)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n\r\n                    {\r\n                            kid.length>0 && \r\n                                <Button size=\"medium\" onClick={(e)=>showComment(e)}>\r\n                                    View the answer\r\n                                </Button>\r\n                    }\r\n\r\n                    {show && \r\n                        (loading ? (\r\n                            <div style={{margin:'20px 0 0 100px'}}>\r\n                                <Card className=\"loading\">\r\n                                    <div className=\"textcomment\">Loading</div>\r\n                                </Card> \r\n                            </div>\r\n                        ):(  kid?.map((k,i)=>(\r\n                            <div style={{margin:'20px 0 0 100px'}}>\r\n                                <Comment by={k.by} id={k.id} parent={k.parent} text={k.text} time={k.time} type={k.type} kids={k.kids}/>\r\n                            </div>\r\n                        ))))\r\n                    }\r\n                </div>\r\n            )\r\n            } \r\n        </div>  \r\n    )\r\n}\r\nexport default Comment;",{"ruleId":"59","severity":1,"message":"60","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":2,"column":36,"nodeType":"61","messageId":"62","endLine":2,"endColumn":50},{"ruleId":"64","severity":1,"message":"65","line":51,"column":8,"nodeType":"66","endLine":51,"endColumn":22,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":56,"column":7,"nodeType":"66","endLine":56,"endColumn":18,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":62,"column":7,"nodeType":"66","endLine":62,"endColumn":13,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":34,"column":7,"nodeType":"66","endLine":34,"endColumn":18,"suggestions":"73"},{"ruleId":"64","severity":1,"message":"70","line":36,"column":7,"nodeType":"66","endLine":36,"endColumn":9,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SetStateAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPosts', 'posts', and 'setLoading'. Either include them or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has missing dependencies: 'fetchPost' and 'setLoading'. Either include them or remove the dependency array.",["76"],"React Hook useEffect has missing dependencies: 'fetchComments' and 'setLoading'. Either include them or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["78"],["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [idPost, click, fetchPosts, setLoading, posts]",{"range":"90","text":"91"},"Update the dependencies array to be: [fetchPost, params.id, setLoading]",{"range":"92","text":"93"},"Update the dependencies array to be: [fetchComments, setLoading, show]",{"range":"94","text":"95"},"Update the dependencies array to be: [fetchUser, params.by]",{"range":"96","text":"97"},"Update the dependencies array to be: [fetchComments, setLoading]",{"range":"98","text":"99"},[1578,1592],"[idPost, click, fetchPosts, setLoading, posts]",[1728,1739],"[fetchPost, params.id, setLoading]",[1853,1859],"[fetchComments, setLoading, show]",[971,982],"[fetchUser, params.by]",[1116,1118],"[fetchComments, setLoading]"]